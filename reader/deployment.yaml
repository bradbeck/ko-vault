---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reader-vault-agent-config
data:
  template.ctmpl: |
    {{- with secret "secret/data/reader/config" -}}
      username: {{ .Data.data.username }}, password: {{ .Data.data.password }}
    {{- end -}}
  config-init.hcl: |
    exit_after_auth = true
    vault {
        address = "http://external-vault:8200"
    }

    pid_file = "/home/vault/pidfile"

    auto_auth {
      method {
        type = "kubernetes"
        config = {
          role = "reader"
        }
      }

      sinks {
        sink {
          type = "file"
          config = {
            path = "/vault/secrets/token"
            mode = 0644
          }
        }

        sink {
          type = "file"
          config = {
            path = "/home/nonroot/.vault-token"
            mode = 0644
          }
        }
      }
    }

    template {
        destination = "/vault/secrets/config.txt"
        source = "/vault/configs/template.ctmpl"
    }
  config.json: |
    {
      "vault": {
        "address": "http://external-vault:8200"
      },
      "pid_file": "/home/vault/pidfile",
      "auto_auth": {
        "method": [
          {
            "type": "kubernetes",
            "config": {
              "role": "reader"
            }
          }
        ],
        "sinks": [
          {
            "sink": {
              "type": "file",
              "config": {
                "path": "/vault/secrets/token",
                "mode": 420
              }
            }
          },
          {
            "sink": {
              "type": "file",
              "config": {
                "path": "/home/nonroot/.vault-token",
                "mode": 420
              }
            }
          }
        ]
      },
      "templates": [{
        "template": {
          "destination": "/vault/secrets/config.txt",
          "source": "/vault/configs/template.ctmpl"
        }
      }]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reader-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reader
  template:
    metadata:
      labels:
        app: reader
    spec:
      serviceAccountName: vault-auth
      volumes:
        - name: config-init
          configMap:
            name: reader-vault-agent-config
            items:
              - key: config-init.hcl
                path: config-init.hcl
        - name: shared-data
          emptyDir: {}
        - name: nonroot-home
          emptyDir: {}
        - name: config
          configMap:
            name: reader-vault-agent-config
            items:
              - key: config.json
                path: config.json
        - name: template
          configMap:
            name: reader-vault-agent-config
            items:
              - key: template.ctmpl
                path: template.ctmpl
      initContainers:
        - name: vault-agent-init
          image: vault
          args:
            - agent
            - -config=/etc/vault/config-init.hcl
            - -log-level=debug
          volumeMounts:
            - mountPath: /etc/vault
              name: config-init
            - mountPath: /vault/secrets
              name: shared-data
            - mountPath: /vault/configs
              name: template
            - mountPath: /home/nonroot
              name: nonroot-home
      containers:
        - name: vault-agent
          image: vault
          args:
            - agent
            - -config=/etc/vault/config.json
            - -log-level=debug
          volumeMounts:
            - mountPath: /etc/vault
              name: config
            - mountPath: /vault/secrets
              name: shared-data
            - mountPath: /vault/configs
              name: template
            - mountPath: /home/nonroot
              name: nonroot-home
        - name: reader
          image: ko://github.com/bradbeck/ko-vault/reader
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /vault/secrets
              name: shared-data
            - mountPath: /home/nonroot
              name: nonroot-home
---
apiVersion: v1
kind: Service
metadata:
  name: reader-service
spec:
  selector:
    app: reader
  ports:
    - protocol: TCP
      port: 8080
